// Code generated by "stringer -type Opcode"; DO NOT EDIT.

package opcode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PUSHINT8-0]
	_ = x[PUSHINT16-1]
	_ = x[PUSHINT32-2]
	_ = x[PUSHINT64-3]
	_ = x[PUSHINT128-4]
	_ = x[PUSHINT256-5]
	_ = x[PUSHNULL-11]
	_ = x[PUSHDATA1-12]
	_ = x[PUSHDATA2-13]
	_ = x[PUSHDATA4-14]
	_ = x[PUSHM1-15]
	_ = x[PUSH0-16]
	_ = x[PUSHF-16]
	_ = x[PUSH1-17]
	_ = x[PUSHT-17]
	_ = x[PUSH2-18]
	_ = x[PUSH3-19]
	_ = x[PUSH4-20]
	_ = x[PUSH5-21]
	_ = x[PUSH6-22]
	_ = x[PUSH7-23]
	_ = x[PUSH8-24]
	_ = x[PUSH9-25]
	_ = x[PUSH10-26]
	_ = x[PUSH11-27]
	_ = x[PUSH12-28]
	_ = x[PUSH13-29]
	_ = x[PUSH14-30]
	_ = x[PUSH15-31]
	_ = x[PUSH16-32]
	_ = x[NOP-97]
	_ = x[JMP-98]
	_ = x[JMPIF-99]
	_ = x[JMPIFNOT-100]
	_ = x[CALL-101]
	_ = x[RET-102]
	_ = x[APPCALL-103]
	_ = x[SYSCALL-104]
	_ = x[TAILCALL-105]
	_ = x[ISNULL-112]
	_ = x[DUPFROMALTSTACK-106]
	_ = x[TOALTSTACK-107]
	_ = x[FROMALTSTACK-108]
	_ = x[XDROP-109]
	_ = x[XSWAP-114]
	_ = x[XTUCK-115]
	_ = x[DEPTH-116]
	_ = x[DROP-117]
	_ = x[DUP-118]
	_ = x[NIP-119]
	_ = x[OVER-120]
	_ = x[PICK-121]
	_ = x[ROLL-122]
	_ = x[ROT-123]
	_ = x[SWAP-124]
	_ = x[TUCK-125]
	_ = x[CAT-126]
	_ = x[SUBSTR-127]
	_ = x[LEFT-128]
	_ = x[RIGHT-129]
	_ = x[SIZE-130]
	_ = x[INVERT-131]
	_ = x[AND-132]
	_ = x[OR-133]
	_ = x[XOR-134]
	_ = x[EQUAL-135]
	_ = x[INC-139]
	_ = x[DEC-140]
	_ = x[SIGN-141]
	_ = x[NEGATE-143]
	_ = x[ABS-144]
	_ = x[NOT-145]
	_ = x[NZ-146]
	_ = x[ADD-147]
	_ = x[SUB-148]
	_ = x[MUL-149]
	_ = x[DIV-150]
	_ = x[MOD-151]
	_ = x[SHL-152]
	_ = x[SHR-153]
	_ = x[BOOLAND-154]
	_ = x[BOOLOR-155]
	_ = x[NUMEQUAL-156]
	_ = x[NUMNOTEQUAL-158]
	_ = x[LT-159]
	_ = x[GT-160]
	_ = x[LTE-161]
	_ = x[GTE-162]
	_ = x[MIN-163]
	_ = x[MAX-164]
	_ = x[WITHIN-165]
	_ = x[SHA1-167]
	_ = x[SHA256-168]
	_ = x[HASH160-169]
	_ = x[HASH256-170]
	_ = x[CHECKSIG-172]
	_ = x[VERIFY-173]
	_ = x[CHECKMULTISIG-174]
	_ = x[ARRAYSIZE-192]
	_ = x[PACK-193]
	_ = x[UNPACK-194]
	_ = x[PICKITEM-195]
	_ = x[SETITEM-196]
	_ = x[NEWARRAY-197]
	_ = x[NEWSTRUCT-198]
	_ = x[NEWMAP-199]
	_ = x[APPEND-200]
	_ = x[REVERSE-201]
	_ = x[REMOVE-202]
	_ = x[HASKEY-203]
	_ = x[KEYS-204]
	_ = x[VALUES-205]
	_ = x[CALLI-224]
	_ = x[CALLE-225]
	_ = x[CALLED-226]
	_ = x[CALLET-227]
	_ = x[CALLEDT-228]
	_ = x[THROW-240]
	_ = x[THROWIFNOT-241]
}

const _Opcode_name = "PUSHINT8PUSHINT16PUSHINT32PUSHINT64PUSHINT128PUSHINT256PUSHNULLPUSHDATA1PUSHDATA2PUSHDATA4PUSHM1PUSH0PUSH1PUSH2PUSH3PUSH4PUSH5PUSH6PUSH7PUSH8PUSH9PUSH10PUSH11PUSH12PUSH13PUSH14PUSH15PUSH16NOPJMPJMPIFJMPIFNOTCALLRETAPPCALLSYSCALLTAILCALLDUPFROMALTSTACKTOALTSTACKFROMALTSTACKXDROPISNULLXSWAPXTUCKDEPTHDROPDUPNIPOVERPICKROLLROTSWAPTUCKCATSUBSTRLEFTRIGHTSIZEINVERTANDORXOREQUALINCDECSIGNNEGATEABSNOTNZADDSUBMULDIVMODSHLSHRBOOLANDBOOLORNUMEQUALNUMNOTEQUALLTGTLTEGTEMINMAXWITHINSHA1SHA256HASH160HASH256CHECKSIGVERIFYCHECKMULTISIGARRAYSIZEPACKUNPACKPICKITEMSETITEMNEWARRAYNEWSTRUCTNEWMAPAPPENDREVERSEREMOVEHASKEYKEYSVALUESCALLICALLECALLEDCALLETCALLEDTTHROWTHROWIFNOT"

var _Opcode_map = map[Opcode]string{
	0:   _Opcode_name[0:8],
	1:   _Opcode_name[8:17],
	2:   _Opcode_name[17:26],
	3:   _Opcode_name[26:35],
	4:   _Opcode_name[35:45],
	5:   _Opcode_name[45:55],
	11:  _Opcode_name[55:63],
	12:  _Opcode_name[63:72],
	13:  _Opcode_name[72:81],
	14:  _Opcode_name[81:90],
	15:  _Opcode_name[90:96],
	16:  _Opcode_name[96:101],
	17:  _Opcode_name[101:106],
	18:  _Opcode_name[106:111],
	19:  _Opcode_name[111:116],
	20:  _Opcode_name[116:121],
	21:  _Opcode_name[121:126],
	22:  _Opcode_name[126:131],
	23:  _Opcode_name[131:136],
	24:  _Opcode_name[136:141],
	25:  _Opcode_name[141:146],
	26:  _Opcode_name[146:152],
	27:  _Opcode_name[152:158],
	28:  _Opcode_name[158:164],
	29:  _Opcode_name[164:170],
	30:  _Opcode_name[170:176],
	31:  _Opcode_name[176:182],
	32:  _Opcode_name[182:188],
	97:  _Opcode_name[188:191],
	98:  _Opcode_name[191:194],
	99:  _Opcode_name[194:199],
	100: _Opcode_name[199:207],
	101: _Opcode_name[207:211],
	102: _Opcode_name[211:214],
	103: _Opcode_name[214:221],
	104: _Opcode_name[221:228],
	105: _Opcode_name[228:236],
	106: _Opcode_name[236:251],
	107: _Opcode_name[251:261],
	108: _Opcode_name[261:273],
	109: _Opcode_name[273:278],
	112: _Opcode_name[278:284],
	114: _Opcode_name[284:289],
	115: _Opcode_name[289:294],
	116: _Opcode_name[294:299],
	117: _Opcode_name[299:303],
	118: _Opcode_name[303:306],
	119: _Opcode_name[306:309],
	120: _Opcode_name[309:313],
	121: _Opcode_name[313:317],
	122: _Opcode_name[317:321],
	123: _Opcode_name[321:324],
	124: _Opcode_name[324:328],
	125: _Opcode_name[328:332],
	126: _Opcode_name[332:335],
	127: _Opcode_name[335:341],
	128: _Opcode_name[341:345],
	129: _Opcode_name[345:350],
	130: _Opcode_name[350:354],
	131: _Opcode_name[354:360],
	132: _Opcode_name[360:363],
	133: _Opcode_name[363:365],
	134: _Opcode_name[365:368],
	135: _Opcode_name[368:373],
	139: _Opcode_name[373:376],
	140: _Opcode_name[376:379],
	141: _Opcode_name[379:383],
	143: _Opcode_name[383:389],
	144: _Opcode_name[389:392],
	145: _Opcode_name[392:395],
	146: _Opcode_name[395:397],
	147: _Opcode_name[397:400],
	148: _Opcode_name[400:403],
	149: _Opcode_name[403:406],
	150: _Opcode_name[406:409],
	151: _Opcode_name[409:412],
	152: _Opcode_name[412:415],
	153: _Opcode_name[415:418],
	154: _Opcode_name[418:425],
	155: _Opcode_name[425:431],
	156: _Opcode_name[431:439],
	158: _Opcode_name[439:450],
	159: _Opcode_name[450:452],
	160: _Opcode_name[452:454],
	161: _Opcode_name[454:457],
	162: _Opcode_name[457:460],
	163: _Opcode_name[460:463],
	164: _Opcode_name[463:466],
	165: _Opcode_name[466:472],
	167: _Opcode_name[472:476],
	168: _Opcode_name[476:482],
	169: _Opcode_name[482:489],
	170: _Opcode_name[489:496],
	172: _Opcode_name[496:504],
	173: _Opcode_name[504:510],
	174: _Opcode_name[510:523],
	192: _Opcode_name[523:532],
	193: _Opcode_name[532:536],
	194: _Opcode_name[536:542],
	195: _Opcode_name[542:550],
	196: _Opcode_name[550:557],
	197: _Opcode_name[557:565],
	198: _Opcode_name[565:574],
	199: _Opcode_name[574:580],
	200: _Opcode_name[580:586],
	201: _Opcode_name[586:593],
	202: _Opcode_name[593:599],
	203: _Opcode_name[599:605],
	204: _Opcode_name[605:609],
	205: _Opcode_name[609:615],
	224: _Opcode_name[615:620],
	225: _Opcode_name[620:625],
	226: _Opcode_name[625:631],
	227: _Opcode_name[631:637],
	228: _Opcode_name[637:644],
	240: _Opcode_name[644:649],
	241: _Opcode_name[649:659],
}

func (i Opcode) String() string {
	if str, ok := _Opcode_map[i]; ok {
		return str
	}
	return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
}
