// Code generated by "stringer -type Opcode"; DO NOT EDIT.

package opcode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PUSHINT8-0]
	_ = x[PUSHINT16-1]
	_ = x[PUSHINT32-2]
	_ = x[PUSHINT64-3]
	_ = x[PUSHINT128-4]
	_ = x[PUSHINT256-5]
	_ = x[PUSHNULL-11]
	_ = x[PUSHDATA1-12]
	_ = x[PUSHDATA2-13]
	_ = x[PUSHDATA4-14]
	_ = x[PUSHM1-15]
	_ = x[PUSH0-16]
	_ = x[PUSHF-16]
	_ = x[PUSH1-17]
	_ = x[PUSHT-17]
	_ = x[PUSH2-18]
	_ = x[PUSH3-19]
	_ = x[PUSH4-20]
	_ = x[PUSH5-21]
	_ = x[PUSH6-22]
	_ = x[PUSH7-23]
	_ = x[PUSH8-24]
	_ = x[PUSH9-25]
	_ = x[PUSH10-26]
	_ = x[PUSH11-27]
	_ = x[PUSH12-28]
	_ = x[PUSH13-29]
	_ = x[PUSH14-30]
	_ = x[PUSH15-31]
	_ = x[PUSH16-32]
	_ = x[OLDPUSH1-81]
	_ = x[NOP-97]
	_ = x[JMP-98]
	_ = x[JMPIF-99]
	_ = x[JMPIFNOT-100]
	_ = x[CALL-101]
	_ = x[RET-102]
	_ = x[APPCALL-103]
	_ = x[SYSCALL-104]
	_ = x[TAILCALL-105]
	_ = x[ISNULL-112]
	_ = x[DUPFROMALTSTACK-106]
	_ = x[TOALTSTACK-107]
	_ = x[FROMALTSTACK-108]
	_ = x[XDROP-109]
	_ = x[XSWAP-114]
	_ = x[XTUCK-115]
	_ = x[DEPTH-116]
	_ = x[DROP-117]
	_ = x[DUP-118]
	_ = x[NIP-119]
	_ = x[OVER-120]
	_ = x[PICK-121]
	_ = x[ROLL-122]
	_ = x[ROT-123]
	_ = x[SWAP-124]
	_ = x[TUCK-125]
	_ = x[CAT-126]
	_ = x[SUBSTR-127]
	_ = x[LEFT-128]
	_ = x[RIGHT-129]
	_ = x[SIZE-130]
	_ = x[INVERT-131]
	_ = x[AND-132]
	_ = x[OR-133]
	_ = x[XOR-134]
	_ = x[EQUAL-135]
	_ = x[INC-139]
	_ = x[DEC-140]
	_ = x[SIGN-141]
	_ = x[NEGATE-143]
	_ = x[ABS-144]
	_ = x[NOT-145]
	_ = x[NZ-146]
	_ = x[ADD-147]
	_ = x[SUB-148]
	_ = x[MUL-149]
	_ = x[DIV-150]
	_ = x[MOD-151]
	_ = x[SHL-152]
	_ = x[SHR-153]
	_ = x[BOOLAND-154]
	_ = x[BOOLOR-155]
	_ = x[NUMEQUAL-156]
	_ = x[NUMNOTEQUAL-158]
	_ = x[LT-159]
	_ = x[GT-160]
	_ = x[LTE-161]
	_ = x[GTE-162]
	_ = x[MIN-163]
	_ = x[MAX-164]
	_ = x[WITHIN-165]
	_ = x[SHA1-167]
	_ = x[SHA256-168]
	_ = x[HASH160-169]
	_ = x[HASH256-170]
	_ = x[CHECKSIG-172]
	_ = x[VERIFY-173]
	_ = x[CHECKMULTISIG-174]
	_ = x[ARRAYSIZE-192]
	_ = x[PACK-193]
	_ = x[UNPACK-194]
	_ = x[PICKITEM-195]
	_ = x[SETITEM-196]
	_ = x[NEWARRAY-197]
	_ = x[NEWSTRUCT-198]
	_ = x[NEWMAP-199]
	_ = x[APPEND-200]
	_ = x[REVERSE-201]
	_ = x[REMOVE-202]
	_ = x[HASKEY-203]
	_ = x[KEYS-204]
	_ = x[VALUES-205]
	_ = x[THROW-240]
	_ = x[THROWIFNOT-241]
}

const _Opcode_name = "PUSHINT8PUSHINT16PUSHINT32PUSHINT64PUSHINT128PUSHINT256PUSHNULLPUSHDATA1PUSHDATA2PUSHDATA4PUSHM1PUSH0PUSH1PUSH2PUSH3PUSH4PUSH5PUSH6PUSH7PUSH8PUSH9PUSH10PUSH11PUSH12PUSH13PUSH14PUSH15PUSH16OLDPUSH1NOPJMPJMPIFJMPIFNOTCALLRETAPPCALLSYSCALLTAILCALLDUPFROMALTSTACKTOALTSTACKFROMALTSTACKXDROPISNULLXSWAPXTUCKDEPTHDROPDUPNIPOVERPICKROLLROTSWAPTUCKCATSUBSTRLEFTRIGHTSIZEINVERTANDORXOREQUALINCDECSIGNNEGATEABSNOTNZADDSUBMULDIVMODSHLSHRBOOLANDBOOLORNUMEQUALNUMNOTEQUALLTGTLTEGTEMINMAXWITHINSHA1SHA256HASH160HASH256CHECKSIGVERIFYCHECKMULTISIGARRAYSIZEPACKUNPACKPICKITEMSETITEMNEWARRAYNEWSTRUCTNEWMAPAPPENDREVERSEREMOVEHASKEYKEYSVALUESTHROWTHROWIFNOT"

var _Opcode_map = map[Opcode]string{
	0:   _Opcode_name[0:8],
	1:   _Opcode_name[8:17],
	2:   _Opcode_name[17:26],
	3:   _Opcode_name[26:35],
	4:   _Opcode_name[35:45],
	5:   _Opcode_name[45:55],
	11:  _Opcode_name[55:63],
	12:  _Opcode_name[63:72],
	13:  _Opcode_name[72:81],
	14:  _Opcode_name[81:90],
	15:  _Opcode_name[90:96],
	16:  _Opcode_name[96:101],
	17:  _Opcode_name[101:106],
	18:  _Opcode_name[106:111],
	19:  _Opcode_name[111:116],
	20:  _Opcode_name[116:121],
	21:  _Opcode_name[121:126],
	22:  _Opcode_name[126:131],
	23:  _Opcode_name[131:136],
	24:  _Opcode_name[136:141],
	25:  _Opcode_name[141:146],
	26:  _Opcode_name[146:152],
	27:  _Opcode_name[152:158],
	28:  _Opcode_name[158:164],
	29:  _Opcode_name[164:170],
	30:  _Opcode_name[170:176],
	31:  _Opcode_name[176:182],
	32:  _Opcode_name[182:188],
	81:  _Opcode_name[188:196],
	97:  _Opcode_name[196:199],
	98:  _Opcode_name[199:202],
	99:  _Opcode_name[202:207],
	100: _Opcode_name[207:215],
	101: _Opcode_name[215:219],
	102: _Opcode_name[219:222],
	103: _Opcode_name[222:229],
	104: _Opcode_name[229:236],
	105: _Opcode_name[236:244],
	106: _Opcode_name[244:259],
	107: _Opcode_name[259:269],
	108: _Opcode_name[269:281],
	109: _Opcode_name[281:286],
	112: _Opcode_name[286:292],
	114: _Opcode_name[292:297],
	115: _Opcode_name[297:302],
	116: _Opcode_name[302:307],
	117: _Opcode_name[307:311],
	118: _Opcode_name[311:314],
	119: _Opcode_name[314:317],
	120: _Opcode_name[317:321],
	121: _Opcode_name[321:325],
	122: _Opcode_name[325:329],
	123: _Opcode_name[329:332],
	124: _Opcode_name[332:336],
	125: _Opcode_name[336:340],
	126: _Opcode_name[340:343],
	127: _Opcode_name[343:349],
	128: _Opcode_name[349:353],
	129: _Opcode_name[353:358],
	130: _Opcode_name[358:362],
	131: _Opcode_name[362:368],
	132: _Opcode_name[368:371],
	133: _Opcode_name[371:373],
	134: _Opcode_name[373:376],
	135: _Opcode_name[376:381],
	139: _Opcode_name[381:384],
	140: _Opcode_name[384:387],
	141: _Opcode_name[387:391],
	143: _Opcode_name[391:397],
	144: _Opcode_name[397:400],
	145: _Opcode_name[400:403],
	146: _Opcode_name[403:405],
	147: _Opcode_name[405:408],
	148: _Opcode_name[408:411],
	149: _Opcode_name[411:414],
	150: _Opcode_name[414:417],
	151: _Opcode_name[417:420],
	152: _Opcode_name[420:423],
	153: _Opcode_name[423:426],
	154: _Opcode_name[426:433],
	155: _Opcode_name[433:439],
	156: _Opcode_name[439:447],
	158: _Opcode_name[447:458],
	159: _Opcode_name[458:460],
	160: _Opcode_name[460:462],
	161: _Opcode_name[462:465],
	162: _Opcode_name[465:468],
	163: _Opcode_name[468:471],
	164: _Opcode_name[471:474],
	165: _Opcode_name[474:480],
	167: _Opcode_name[480:484],
	168: _Opcode_name[484:490],
	169: _Opcode_name[490:497],
	170: _Opcode_name[497:504],
	172: _Opcode_name[504:512],
	173: _Opcode_name[512:518],
	174: _Opcode_name[518:531],
	192: _Opcode_name[531:540],
	193: _Opcode_name[540:544],
	194: _Opcode_name[544:550],
	195: _Opcode_name[550:558],
	196: _Opcode_name[558:565],
	197: _Opcode_name[565:573],
	198: _Opcode_name[573:582],
	199: _Opcode_name[582:588],
	200: _Opcode_name[588:594],
	201: _Opcode_name[594:601],
	202: _Opcode_name[601:607],
	203: _Opcode_name[607:613],
	204: _Opcode_name[613:617],
	205: _Opcode_name[617:623],
	240: _Opcode_name[623:628],
	241: _Opcode_name[628:638],
}

func (i Opcode) String() string {
	if str, ok := _Opcode_map[i]; ok {
		return str
	}
	return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
}
